// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(function(require) {
  var Throbber, util;
  util = require('util');
  return Throbber = (function() {
    Throbber.prototype.options = {
      duration: 500,
      easing: 'linear',
      size: 10,
      text: 'click me!'
    };

    function Throbber(bubble, graph) {
      this.bubble = bubble;
      this.graph = graph;
      this.throb = __bind(this.throb, this);
      this.state = true;
      this.r = this.bubble.attr('r');
      this.x = this.bubble.attr('cx');
      this.y = this.bubble.attr('cy');
      this.throb();
      this.showMessage();
    }

    Throbber.prototype.throb = function() {
      this.state = !this.state;
      return this.bubble.animate({
        r: this.r + (this.state ? this.options.size : 0)
      }, this.options.duration, this.options.easing, this.throb);
    };

    Throbber.prototype.clear = function() {};

    Throbber.prototype.showMessage = function() {
      var element;
      element = this.text = document.createElement('div');
      element.id = 'clickme';
      element.innerHTML = this.options.text;
      element.style.cssText = "left:" + (this.x - this.r) + "px; top:" + this.y + "px";
      document.body.appendChild(element);
      element.style.marginLeft = "" + (this.r - element.offsetWidth / 2) + "px";
      util.classList.add(element, 'fade-in');
      return this.attachMessageEvents();
    };

    Throbber.prototype.attachMessageEvents = function() {
      var _this = this;
      this.text.addEventListener('mouseover', function() {
        return _this.graph.over(_this.bubble);
      });
      this.text.addEventListener('mouseout', function() {
        return _this.graph.out(_this.bubble);
      });
      return this.text.addEventListener('click', function() {
        return _this.graph.click(_this.bubble);
      });
    };

    return Throbber;

  })();
});
